{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "span",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "top_level_statment"
      }
    },
    "top_level_statment": {
      "type": "PREC",
      "value": 1,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "function"
          },
          {
            "type": "SYMBOL",
            "name": "expression_statement"
          },
          {
            "type": "SYMBOL",
            "name": "struct_definition"
          },
          {
            "type": "SYMBOL",
            "name": "enum_definition"
          },
          {
            "type": "SYMBOL",
            "name": "union_definition"
          },
          {
            "type": "SYMBOL",
            "name": "interface_definition"
          },
          {
            "type": "SYMBOL",
            "name": "assignment_statement"
          },
          {
            "type": "SYMBOL",
            "name": "inner_statment"
          }
        ]
      }
    },
    "inner_statment": {
      "type": "PREC",
      "value": 0,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "expression_statement"
          },
          {
            "type": "SYMBOL",
            "name": "return_statement"
          },
          {
            "type": "SYMBOL",
            "name": "if_statement"
          },
          {
            "type": "SYMBOL",
            "name": "scope_continue_statement"
          },
          {
            "type": "SYMBOL",
            "name": "continue_statement"
          },
          {
            "type": "SYMBOL",
            "name": "scope_break_statement"
          },
          {
            "type": "SYMBOL",
            "name": "break_statement"
          },
          {
            "type": "SYMBOL",
            "name": "while_statement"
          },
          {
            "type": "SYMBOL",
            "name": "for_statement"
          },
          {
            "type": "SYMBOL",
            "name": "switch_statement"
          },
          {
            "type": "SYMBOL",
            "name": "scope"
          },
          {
            "type": "SYMBOL",
            "name": "yeild_statement"
          },
          {
            "type": "SYMBOL",
            "name": "assignment_statement"
          }
        ]
      }
    },
    "return": {
      "type": "STRING",
      "value": "return"
    },
    "if": {
      "type": "STRING",
      "value": "if"
    },
    "else": {
      "type": "STRING",
      "value": "else"
    },
    "for": {
      "type": "STRING",
      "value": "for"
    },
    "while": {
      "type": "STRING",
      "value": "while"
    },
    "switch": {
      "type": "STRING",
      "value": "switch"
    },
    "case": {
      "type": "STRING",
      "value": "case"
    },
    "yield": {
      "type": "STRING",
      "value": "yield"
    },
    "break": {
      "type": "STRING",
      "value": "break"
    },
    "sbreak": {
      "type": "STRING",
      "value": "sbreak"
    },
    "continue": {
      "type": "STRING",
      "value": "continue"
    },
    "scontinue": {
      "type": "STRING",
      "value": "scontinue"
    },
    "in": {
      "type": "STRING",
      "value": "in"
    },
    "struct": {
      "type": "STRING",
      "value": "struct"
    },
    "union": {
      "type": "STRING",
      "value": "union"
    },
    "enum": {
      "type": "STRING",
      "value": "enum"
    },
    "interface": {
      "type": "STRING",
      "value": "interface"
    },
    "assignment": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "assignment_assignee"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "assignment_assignee"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        }
      ]
    },
    "assignment_assignee": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "SYMBOL",
          "name": "variable_declaration"
        }
      ]
    },
    "variable_declaration": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "type"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "assignment_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "assignment"
        },
        {
          "type": "SYMBOL",
          "name": "end_of_statement"
        }
      ]
    },
    "while_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "while"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "SYMBOL",
          "name": "scope"
        }
      ]
    },
    "switch_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "switch"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "SYMBOL",
          "name": "switch_scope"
        }
      ]
    },
    "yeild_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "yield"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "SYMBOL",
          "name": "end_of_statement"
        }
      ]
    },
    "case_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "case"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "SYMBOL",
          "name": "scope"
        }
      ]
    },
    "switch_scope": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "case_statement"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        },
        {
          "type": "SYMBOL",
          "name": "end_of_statement"
        }
      ]
    },
    "for_in_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "for"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "identifier"
                },
                {
                  "type": "SYMBOL",
                  "name": "in"
                },
                {
                  "type": "SYMBOL",
                  "name": "expression"
                },
                {
                  "type": "SYMBOL",
                  "name": "scope"
                }
              ]
            },
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "("
                },
                {
                  "type": "SYMBOL",
                  "name": "identifier"
                },
                {
                  "type": "SYMBOL",
                  "name": "in"
                },
                {
                  "type": "SYMBOL",
                  "name": "expression"
                },
                {
                  "type": "STRING",
                  "value": ")"
                },
                {
                  "type": "SYMBOL",
                  "name": "scope"
                }
              ]
            }
          ]
        }
      ]
    },
    "for_c_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "for"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "CHOICE",
                      "members": [
                        {
                          "type": "SYMBOL",
                          "name": "expression"
                        },
                        {
                          "type": "SYMBOL",
                          "name": "assignment"
                        }
                      ]
                    },
                    {
                      "type": "BLANK"
                    }
                  ]
                },
                {
                  "type": "SYMBOL",
                  "name": "end_of_statement"
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "expression"
                    },
                    {
                      "type": "BLANK"
                    }
                  ]
                },
                {
                  "type": "SYMBOL",
                  "name": "end_of_statement"
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "CHOICE",
                      "members": [
                        {
                          "type": "SYMBOL",
                          "name": "expression"
                        },
                        {
                          "type": "SYMBOL",
                          "name": "assignment"
                        }
                      ]
                    },
                    {
                      "type": "BLANK"
                    }
                  ]
                },
                {
                  "type": "SYMBOL",
                  "name": "scope"
                }
              ]
            },
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "("
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "assignment"
                    },
                    {
                      "type": "BLANK"
                    }
                  ]
                },
                {
                  "type": "SYMBOL",
                  "name": "end_of_statement"
                },
                {
                  "type": "SYMBOL",
                  "name": "expression"
                },
                {
                  "type": "SYMBOL",
                  "name": "end_of_statement"
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "expression"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "assignment"
                    }
                  ]
                },
                {
                  "type": "STRING",
                  "value": ")"
                },
                {
                  "type": "SYMBOL",
                  "name": "scope"
                }
              ]
            }
          ]
        }
      ]
    },
    "for_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "for_in_statement"
        },
        {
          "type": "SYMBOL",
          "name": "for_c_statement"
        }
      ]
    },
    "return_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "return"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "SYMBOL",
          "name": "end_of_statement"
        }
      ]
    },
    "if_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "if"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "SYMBOL",
          "name": "scope"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "else_statement"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "scope_continue_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "scontinue"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "number"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "end_of_statement"
        }
      ]
    },
    "continue_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "continue"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "number"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "end_of_statement"
        }
      ]
    },
    "scope_break_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "sbreak"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "number"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "end_of_statement"
        }
      ]
    },
    "break_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "break"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "number"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "end_of_statement"
        }
      ]
    },
    "else_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "else"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "if_statement"
            },
            {
              "type": "SYMBOL",
              "name": "scope"
            }
          ]
        }
      ]
    },
    "expression_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "SYMBOL",
          "name": "end_of_statement"
        }
      ]
    },
    "boolean": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    },
    "expression": {
      "type": "PREC",
      "value": 1,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "number"
          },
          {
            "type": "SYMBOL",
            "name": "boolean"
          },
          {
            "type": "SYMBOL",
            "name": "char"
          },
          {
            "type": "SYMBOL",
            "name": "identifier"
          },
          {
            "type": "SYMBOL",
            "name": "string"
          },
          {
            "type": "SYMBOL",
            "name": "function_call"
          },
          {
            "type": "SYMBOL",
            "name": "member_access"
          },
          {
            "type": "SYMBOL",
            "name": "type_data_access"
          },
          {
            "type": "SYMBOL",
            "name": "parenthesized_expression"
          },
          {
            "type": "SYMBOL",
            "name": "biop"
          },
          {
            "type": "SYMBOL",
            "name": "method_call"
          },
          {
            "type": "SYMBOL",
            "name": "grouped_expression"
          },
          {
            "type": "SYMBOL",
            "name": "moop"
          }
        ]
      }
    },
    "moop_operator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "++"
        },
        {
          "type": "STRING",
          "value": "--"
        }
      ]
    },
    "moop": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "SYMBOL",
          "name": "moop_operator"
        }
      ]
    },
    "grouped_expression": {
      "type": "PREC_LEFT",
      "value": 2,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "expression"
          },
          {
            "type": "REPEAT1",
            "content": {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": ","
                },
                {
                  "type": "SYMBOL",
                  "name": "expression"
                }
              ]
            }
          }
        ]
      }
    },
    "type_data_access": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "type"
        },
        {
          "type": "STRING",
          "value": "."
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "biop": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC_LEFT",
          "value": 9,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "expression"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": "*"
                  },
                  {
                    "type": "STRING",
                    "value": "/"
                  },
                  {
                    "type": "STRING",
                    "value": "%"
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "expression"
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 8,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "expression"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": "+"
                  },
                  {
                    "type": "STRING",
                    "value": "-"
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "expression"
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 7,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "expression"
              },
              {
                "type": "STRING",
                "value": "^"
              },
              {
                "type": "SYMBOL",
                "name": "expression"
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 6,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "expression"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": "&"
                  },
                  {
                    "type": "STRING",
                    "value": "|"
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "expression"
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 5,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "expression"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": "=="
                  },
                  {
                    "type": "STRING",
                    "value": "!="
                  },
                  {
                    "type": "STRING",
                    "value": "<"
                  },
                  {
                    "type": "STRING",
                    "value": "<="
                  },
                  {
                    "type": "STRING",
                    "value": ">"
                  },
                  {
                    "type": "STRING",
                    "value": ">="
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "expression"
              }
            ]
          }
        },
        {
          "type": "PREC_LEFT",
          "value": 4,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "expression"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": "&&"
                  },
                  {
                    "type": "STRING",
                    "value": "||"
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "expression"
              }
            ]
          }
        }
      ]
    },
    "parenthesized_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "function_call": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "function",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "SYMBOL",
          "name": "function_call_parameter_list"
        }
      ]
    },
    "method_call": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "object",
          "content": {
            "type": "SYMBOL",
            "name": "expression"
          }
        },
        {
          "type": "STRING",
          "value": "."
        },
        {
          "type": "SYMBOL",
          "name": "function_call"
        }
      ]
    },
    "member_access": {
      "type": "PREC",
      "value": 2,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "FIELD",
            "name": "object",
            "content": {
              "type": "SYMBOL",
              "name": "expression"
            }
          },
          {
            "type": "STRING",
            "value": "."
          },
          {
            "type": "FIELD",
            "name": "member",
            "content": {
              "type": "SYMBOL",
              "name": "identifier"
            }
          }
        ]
      }
    },
    "function_call_parameter_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "function_call_parameter"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "STRING",
                        "value": ","
                      },
                      {
                        "type": "SYMBOL",
                        "name": "function_call_parameter"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "function_call_parameter": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "expression"
        }
      ]
    },
    "scope": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "inner_statment"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        },
        {
          "type": "SYMBOL",
          "name": "end_of_statement"
        }
      ]
    },
    "union_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "union"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "identifier"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "template_definition"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "union_scope"
        }
      ]
    },
    "union_scope": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "union_field"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        },
        {
          "type": "SYMBOL",
          "name": "end_of_statement"
        }
      ]
    },
    "union_field": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "type"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "end_of_statement"
        }
      ]
    },
    "enum_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "enum"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "template_definition"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "enum_scope"
        }
      ]
    },
    "enum_scope": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "enum_field"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        },
        {
          "type": "SYMBOL",
          "name": "end_of_statement"
        }
      ]
    },
    "enum_field": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "type"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "end_of_statement"
        }
      ]
    },
    "interface_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "interface"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "template_definition"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "interface_scope"
        }
      ]
    },
    "interface_scope": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "interface_field"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        },
        {
          "type": "SYMBOL",
          "name": "end_of_statement"
        }
      ]
    },
    "interface_field": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "type"
            },
            {
              "type": "SYMBOL",
              "name": "identifier"
            },
            {
              "type": "SYMBOL",
              "name": "end_of_statement"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "function_definition"
            },
            {
              "type": "SYMBOL",
              "name": "end_of_statement"
            }
          ]
        }
      ]
    },
    "struct_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "struct"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "template_definition"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "struct_scope"
        }
      ]
    },
    "struct_field": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "type"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "end_of_statement"
        }
      ]
    },
    "struct_scope": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "struct_field"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        },
        {
          "type": "SYMBOL",
          "name": "end_of_statement"
        }
      ]
    },
    "function": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "function_definition"
        },
        {
          "type": "SYMBOL",
          "name": "scope"
        }
      ]
    },
    "function_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "return_type",
          "content": {
            "type": "SYMBOL",
            "name": "type"
          }
        },
        {
          "type": "FIELD",
          "name": "method_type",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "type"
                  },
                  {
                    "type": "STRING",
                    "value": "."
                  }
                ]
              },
              {
                "type": "BLANK"
              }
            ]
          }
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "template_definition"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "function_definition_parameter_list"
        }
      ]
    },
    "function_definition_parameter_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "function_definition_parameter"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "STRING",
                        "value": ","
                      },
                      {
                        "type": "SYMBOL",
                        "name": "function_definition_parameter"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "function_definition_parameter": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "type"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "type": {
      "type": "PREC_RIGHT",
      "value": 0,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "identifier"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "type_modifier"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "("
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              },
              {
                "type": "SYMBOL",
                "name": "type_modifier"
              },
              {
                "type": "STRING",
                "value": ")"
              }
            ]
          }
        ]
      }
    },
    "type_modifier": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "*"
        },
        {
          "type": "STRING",
          "value": "&"
        },
        {
          "type": "STRING",
          "value": "^"
        },
        {
          "type": "STRING",
          "value": "'"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "["
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "number"
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "STRING",
              "value": "]"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "{"
            },
            {
              "type": "SYMBOL",
              "name": "type"
            },
            {
              "type": "STRING",
              "value": "}"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "type_modifier_implicit_struct"
        },
        {
          "type": "SYMBOL",
          "name": "type_modifier_implicit_enum"
        }
      ]
    },
    "type_modifier_implicit_struct": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "REPEAT1",
        "content": {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": ","
            },
            {
              "type": "SYMBOL",
              "name": "type"
            }
          ]
        }
      }
    },
    "type_modifier_implicit_enum": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "REPEAT1",
        "content": {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "|"
            },
            {
              "type": "SYMBOL",
              "name": "type"
            }
          ]
        }
      }
    },
    "template_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "<"
        },
        {
          "type": "SYMBOL",
          "name": "tempalte_definition_argument"
        },
        {
          "type": "STRING",
          "value": ">"
        }
      ]
    },
    "tempalte_definition_argument": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": ":"
                },
                {
                  "type": "SYMBOL",
                  "name": "type"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "template_instance": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "<"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SYMBOL",
            "name": "type"
          }
        },
        {
          "type": "STRING",
          "value": ">"
        }
      ]
    },
    "number": {
      "type": "PATTERN",
      "value": "\\d+(\\.\\d+)?"
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Z_]\\w*"
    },
    "string_open": {
      "type": "STRING",
      "value": "\""
    },
    "string_close": {
      "type": "STRING",
      "value": "\""
    },
    "string_open_multiline": {
      "type": "STRING",
      "value": "\"\"\""
    },
    "string_close_multiline": {
      "type": "STRING",
      "value": "\"\"\""
    },
    "string_content": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "[^\"\\n\\r\\\\{]"
        },
        {
          "type": "SYMBOL",
          "name": "escape_sequence"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "PATTERN",
              "value": "\\\\"
            },
            {
              "type": "STRING",
              "value": "{"
            }
          ]
        }
      ]
    },
    "string_content_multiline": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "[^\"{\\\\]"
        },
        {
          "type": "SYMBOL",
          "name": "escape_sequence"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "PATTERN",
              "value": "\\\\"
            },
            {
              "type": "STRING",
              "value": "{"
            }
          ]
        }
      ]
    },
    "escape_sequence": {
      "type": "PATTERN",
      "value": "\\\\."
    },
    "string": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "string_open"
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "string_content"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "interpolation"
                  }
                ]
              }
            },
            {
              "type": "SYMBOL",
              "name": "string_close"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "string_open_multiline"
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "string_content_multiline"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "interpolation"
                  }
                ]
              }
            },
            {
              "type": "SYMBOL",
              "name": "string_close_multiline"
            }
          ]
        }
      ]
    },
    "char": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "char_open"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "char_content"
          }
        },
        {
          "type": "SYMBOL",
          "name": "char_close"
        }
      ]
    },
    "char_open": {
      "type": "STRING",
      "value": "'"
    },
    "char_close": {
      "type": "STRING",
      "value": "'"
    },
    "char_content": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "[^'\\\\\\n\\r]"
        },
        {
          "type": "SYMBOL",
          "name": "escape_sequence"
        }
      ]
    },
    "interpolation_open": {
      "type": "STRING",
      "value": "{"
    },
    "interpolation_close": {
      "type": "STRING",
      "value": "}"
    },
    "interpolation": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "interpolation_open"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "SYMBOL",
          "name": "interpolation_close"
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [
    [
      "moop",
      "grouped_expression"
    ],
    [
      "variable_declaration",
      "type"
    ]
  ],
  "precedences": [],
  "externals": [
    {
      "type": "SYMBOL",
      "name": "end_of_statement"
    }
  ],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}